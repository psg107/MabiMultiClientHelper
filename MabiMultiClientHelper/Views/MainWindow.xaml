<mah:MetroWindow x:Class="MabiMultiClientHelper.Views.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:local="clr-namespace:MabiMultiClientHelper"
                 xmlns:ap="clr-namespace:MabiMultiClientHelper.AttachedProperty"
                 xmlns:m="clr-namespace:MabiMultiClientHelper.Models"
                 xmlns:vm="clr-namespace:MabiMultiClientHelper.ViewModels"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                 xmlns:cmd="http://www.galasoft.ch/mvvmlight"
                 mc:Ignorable="d"
                 Title="마비노기 멀티 클라이언트 도우미"
                 WindowStartupLocation="CenterScreen"
                 Width="350"
                 Height="300"
                 MinWidth="300"
                 MinHeight="250"
                 Name="Win">

    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <DataTemplate x:Key="ListBoxClientInfoDataTemplate" DataType="{x:Type m:ClientInfo}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="{Binding PID}" VerticalAlignment="Center" />
                <TextBlock Grid.Column="1" Text="{Binding Name}" VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>
        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MahApps.Styles.ListBoxItem}">
            <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu Tag="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}">
                        <MenuItem Header="활성화" 
                                  Command="{Binding PlacementTarget.Tag.ActivateWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  CommandParameter="{Binding }" />

                        <MenuItem Header="응답없음 복원시도" 
                                  Command="{Binding PlacementTarget.Tag.RestoreClientCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  CommandParameter="{Binding }" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <cmd:EventToCommand Command="{Binding LoadCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Border BorderThickness="2">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Running}" Value="True">
                        <Setter Property="BorderBrush" Value="Red" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Running}" Value="False">
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
        
            <!--리스트-->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!--메인 클라이언트-->
                <TextBlock Grid.Column="0" Grid.Row="0" Text="메인 클라이언트" HorizontalAlignment="Center" VerticalAlignment="Bottom" Padding="0,0,0,2" />
                <ListBox Grid.Column="0" 
                         Grid.Row="1" 
                         ItemsSource="{Binding MainClients}" 
                         ItemTemplate="{StaticResource ListBoxClientInfoDataTemplate}" 
                         BorderBrush="#EEE"
                         BorderThickness="1"
                         ap:DragAndDrop.DragEnabled="True" 
                         ap:DragAndDrop.DropEnabled="True"
                         AllowDrop="{Binding Running, Converter={StaticResource BoolValueConverter}}"
                         ItemContainerStyle="{StaticResource ListBoxItemStyle}" />

                <!--서브 클라이언트-->
                <TextBlock Grid.Column="1" Grid.Row="0" Text="서브 클라이언트" HorizontalAlignment="Center" VerticalAlignment="Bottom" Padding="0,0,0,2" />
                <ListBox Grid.Column="1" 
                         Grid.Row="1" 
                         ItemsSource="{Binding SubClients}" 
                         ItemTemplate="{StaticResource ListBoxClientInfoDataTemplate}" 
                         BorderBrush="#EEE"
                         BorderThickness="1"
                         ap:DragAndDrop.DragEnabled="True" 
                         ap:DragAndDrop.DropEnabled="True"
                         AllowDrop="{Binding Running, Converter={StaticResource BoolValueConverter}}" 
                         ItemContainerStyle="{StaticResource ListBoxItemStyle}" />

                <ToggleButton x:Name="Btn" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Center" Width="20" Height="20" Padding="0" Margin="0" IsHitTestVisible="{Binding ElementName=Popup, Path=IsOpen, Mode=OneWay, Converter={StaticResource BoolValueConverter}}">
                    <TextBlock Text="?"/>
                </ToggleButton>

                <Popup IsOpen="{Binding IsChecked, ElementName=Btn}" StaysOpen="False" PlacementTarget="{Binding ElementName=Btn}" Placement="Bottom" FocusVisualStyle="{x:Null}">
                    <Border BorderBrush="Black" BorderThickness="1" Background="White" Padding="10">
                        <TextBlock TextWrapping="Wrap">
                            마비노기 멀티 클라이언트를 쉽게 관리하기 위한 프로그램입니다. <LineBreak />
                            <LineBreak />
                            [사용방법]<LineBreak />
                            1. 스캔 버튼을 눌러 현재 실행중인 마비노기 클라이언트를 스캔한다.<LineBreak />
                            2. '서브 클라이언트'에서 본캐릭터가 접속중인 클라이언트를 찾아 '메인 클라이언트'로 옮긴다.<LineBreak />
                            3. 작동 버튼을 누르면 약 5초 후 작동한다.<LineBreak />
                            <LineBreak />
                            [추가 기능]<LineBreak />
                            ScrollLock : 멀티 클라이언트 도우미 창 활성화<LineBreak />
                            마우스 우클릭 : 클라이언트 개별 기능<LineBreak />
                            <LineBreak />
                            마비노기 갤러리 울프
                        </TextBlock>
                    </Border>
                </Popup>
            </Grid>
        
            <!--설정 및 버튼-->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
            
                <!--passActivateWindow-->
                <CheckBox Grid.Column="0" Grid.Row="0" Content="활성화중인 서브 클라이언트 CPU 제한 해제" IsChecked="{Binding PassWhenActivateCheckBox}" Margin="2" HorizontalAlignment="Left" IsEnabled="{Binding Running, Converter={StaticResource BoolValueConverter}}" />

                <!--scan-->
                <Button Grid.Column="0" Grid.Row="1" Content="스캔" Command="{Binding ScanCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
                            <Setter Property="FontSize" Value="12" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Running}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.3" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            
                <!--run/stop-->
                <Button Grid.Column="0" Grid.Row="2">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="#333" />
                            <Setter Property="FontSize" Value="12" />
                        
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SubClients.Count}" Value="0">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.3" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Running}" Value="False">
                                    <Setter Property="Content" Value="작동" />
                                    <Setter Property="Command" Value="{Binding StartCommand}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Running}" Value="True">
                                    <Setter Property="Content" Value="정지" />
                                    <Setter Property="Command" Value="{Binding StopCommand}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Stopping}" Value="True">
                                    <Setter Property="Content" Value="정지 중.." />
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.3" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>
    </Border>
    
</mah:MetroWindow>

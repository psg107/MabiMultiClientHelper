<mah:MetroWindow x:Class="MabiMultiClientHelper.Views.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:local="clr-namespace:MabiMultiClientHelper"
                 xmlns:ap="clr-namespace:MabiMultiClientHelper.AttachedProperty"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:m="clr-namespace:MabiMultiClientHelper.Models"
                 xmlns:vm="clr-namespace:MabiMultiClientHelper.ViewModels"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:h="clr-namespace:MabiMultiClientHelper.Helpers"
                 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                 xmlns:cmd="http://www.galasoft.ch/mvvmlight"
                 ShowActivated="True"
                 mc:Ignorable="d"
                 Title="마비노기 멀티 클라이언트 도우미"
                 WindowStartupLocation="CenterScreen"
                 Width="350"
                 Height="300"
                 MinWidth="300"
                 MinHeight="250"
                 Name="Win">

    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <DataTemplate x:Key="ListBoxClientInfoDataTemplate" DataType="{x:Type m:ClientInfo}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="{Binding PID}" VerticalAlignment="Center" />
                <TextBlock Grid.Column="1" Text="{Binding Name}" VerticalAlignment="Center" />
                <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="0,0,5,0">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MahApps.Styles.TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsHiddenWindow}" Value="True">
                                    <Setter Property="Text" Value="🙈" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </DataTemplate>
        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MahApps.Styles.ListBoxItem}">
            <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu Tag="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}">
                        <MenuItem Header="{Binding Name}" IsEnabled="False" IsCheckable="False" />

                        <Separator />

                        <MenuItem Header="맨 위로 활성화" 
                                  Command="{Binding PlacementTarget.Tag.ActivateWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  CommandParameter="{Binding }" />

                        <Separator />

                        <MenuItem>
                            <MenuItem.Style>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MahApps.Styles.MenuItem}">
                                    <Setter Property="Header" Value="창 숨기기" />
                                    <Setter Property="Command" Value="{Binding PlacementTarget.Tag.HideWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                    <Setter Property="CommandParameter" Value="{Binding }" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlacementTarget.DataContext.IsHiddenWindow, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True">
                                            <Setter Property="Header" Value="창 보이기" />
                                            <Setter Property="Command" Value="{Binding PlacementTarget.Tag.ShowWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                    </ContextMenu>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsHiddenWindow}" Value="True">
                    <Setter Property="Background" Value="LightGray" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <h:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <cmd:EventToCommand Command="{Binding LoadCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding CloseAppCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Border BorderThickness="2">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Running}" Value="True">
                        <Setter Property="BorderBrush" Value="Red" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Running}" Value="False">
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
        
            <!--리스트-->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!--메인 클라이언트-->
                <TextBlock Grid.Column="0" Grid.Row="0" Text="메인 클라이언트" HorizontalAlignment="Center" VerticalAlignment="Bottom" Padding="0,0,0,2" />
                <ListBox Grid.Column="0" 
                         Grid.Row="1" 
                         ItemsSource="{Binding MainClients}" 
                         ItemTemplate="{StaticResource ListBoxClientInfoDataTemplate}" 
                         BorderBrush="#EEE"
                         BorderThickness="1"
                         ap:DragAndDrop.DragEnabled="True" 
                         ap:DragAndDrop.DropEnabled="True"
                         AllowDrop="{Binding Running, Converter={StaticResource BoolValueConverter}}"
                         ItemContainerStyle="{StaticResource ListBoxItemStyle}" />

                <!--서브 클라이언트-->
                <TextBlock Grid.Column="1" Grid.Row="0" Text="서브 클라이언트" HorizontalAlignment="Center" VerticalAlignment="Bottom" Padding="0,0,0,2" />
                <ListBox Grid.Column="1" 
                         Grid.Row="1" 
                         ItemsSource="{Binding SubClients}" 
                         ItemTemplate="{StaticResource ListBoxClientInfoDataTemplate}" 
                         BorderBrush="#EEE"
                         BorderThickness="1"
                         ap:DragAndDrop.DragEnabled="True" 
                         ap:DragAndDrop.DropEnabled="True"
                         AllowDrop="{Binding Running, Converter={StaticResource BoolValueConverter}}" 
                         ItemContainerStyle="{StaticResource ListBoxItemStyle}" />

                <Button Name="MenuButton" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Center" Content="+" Width="20" Height="20">
                    <Button.ContextMenu>
                        <ContextMenu x:Name="MainContextMenu">
                            <MenuItem Header="도움말" Click="MenuItem_Click" />
                            <Separator />
                            <MenuItem Header="모든 서브 클라이언트 숨기기" Command="{Binding Source={StaticResource Proxy}, Path=Data.HideAllClientCommand}" />
                            <MenuItem Header="모든 클라이언트 보이기" Command="{Binding Source={StaticResource Proxy}, Path=Data.ShowAllClientCommand}" />
                            <Separator />
                            <MenuItem Header="클라이언트 응답없음 복원 시도" Command="{Binding Source={StaticResource Proxy}, Path=Data.RestoreAllClientCommand}" IsEnabled="{Binding Source={StaticResource Proxy}, Path=Data.Running, Converter={StaticResource BoolValueConverter}}" />
                        </ContextMenu>
                    </Button.ContextMenu>

                    <Button.Triggers>
                        <EventTrigger SourceName="MenuButton" RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainContextMenu" Storyboard.TargetProperty="(ContextMenu.IsOpen)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>True</sys:Boolean>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>

                <Popup x:Name="PopupMenu" StaysOpen="False" PlacementTarget="{Binding ElementName=MenuButton}" Placement="Bottom" FocusVisualStyle="{x:Null}">
                    <Border BorderBrush="Black" BorderThickness="1" Background="White" Padding="10">
                        <TextBlock TextWrapping="Wrap">
                            마비노기 멀티 클라이언트를 쉽게 관리하기 위한 프로그램입니다. <LineBreak />
                            <LineBreak />
                            [사용방법]<LineBreak />
                            1. 스캔 버튼을 눌러 현재 실행중인 마비노기 클라이언트를 스캔한다.<LineBreak />
                            2. '서브 클라이언트'에서 본캐릭터가 접속중인 클라이언트를 찾아 '메인 클라이언트'로 옮긴다.<LineBreak />
                            3. 작동 버튼을 누른다.<LineBreak />
                            <LineBreak />
                            [추가 기능]<LineBreak />
                            ScrollLock : 멀티 클라이언트 도우미 창 활성화<LineBreak />
                            마우스 우클릭 : 클라이언트 개별 기능<LineBreak />
                            <LineBreak />
                            마비노기 갤러리 울프
                        </TextBlock>
                    </Border>
                </Popup>
            </Grid>
        
            <!--설정 및 버튼-->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
            
                <!--passActivateWindow-->
                <CheckBox Grid.Column="0" Grid.Row="0" Content="활성화중인 서브 클라이언트 CPU 제한 해제" IsChecked="{Binding SkipWhenSubClientActivated}" Margin="2" HorizontalAlignment="Left" IsEnabled="{Binding Running, Converter={StaticResource BoolValueConverter}}" />

                <!--affinity-->
                <CheckBox Grid.Column="0" Grid.Row="1" Content="클라이언트 선호도 변경" IsChecked="{Binding ChangeClientAffinity}" Margin="2" HorizontalAlignment="Left" IsEnabled="{Binding Running, Converter={StaticResource BoolValueConverter}}" />

                <!--slider-->
                <Grid Grid.Column="0" Grid.Row="2" ToolTip="값이 높을수록 느려짐" Margin="2,0,0,2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="정지간격(ms) : " VerticalAlignment="Center" />
                    <Slider x:Name="ProcessSlider" Grid.Column="1" Minimum="10" Maximum="100" TickFrequency="1" IsSnapToTickEnabled="True" Value="{Binding SuspendInterval}" FocusVisualStyle="{x:Null}" />
                    <TextBlock Grid.Column="2" Text="{Binding ElementName=ProcessSlider, Path=Value}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0" />
                </Grid>

                <!--scan-->
                <Button Grid.Column="0" Grid.Row="3" Content="스캔" Command="{Binding ScanCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
                            <Setter Property="FontSize" Value="12" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Running}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.3" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            
                <!--run/stop-->
                <Button Grid.Column="0" Grid.Row="4">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="#333" />
                            <Setter Property="FontSize" Value="12" />
                        
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SubClients.Count}" Value="0">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.3" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Running}" Value="False">
                                    <Setter Property="Content" Value="작동" />
                                    <Setter Property="Command" Value="{Binding StartCommand}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Running}" Value="True">
                                    <Setter Property="Content" Value="정지" />
                                    <Setter Property="Command" Value="{Binding StopCommand}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Stopping}" Value="True">
                                    <Setter Property="Content" Value="정지 중.." />
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.3" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>
    </Border>
    
</mah:MetroWindow>
